apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: jumpstarter-run-command
spec:
  params:
    - description: The lease ID to use for command execution.
      name: jmp-lease-id
      type: string
    - default: 'default'
      description: The client config to use.
      name: client-name
      type: string
    - description: The commands to run.
      name: jmp-jScript
      type: string
    - description: Image to use.
      name: image
      type: string
      default: 'quay.io/jumpstarter-dev/jumpstarter:latest'
    - description: User home for the provided image
      name: home
      type: string
      default: '/root'
    - name: 'config'
      description: The Jumpstarter client config contents, can be used instead of the workspace.
      type: string
      default: ''

  steps:
    - computeResources: {}
      image: "$(params.image)"
      name: jmp-run-command
      script: |
        #!/bin/bash
        set -eux

        # Check if the config parameter is provided
        if [ -n "$(params.config)" ]; then
          set +x
          # If the config parameter is provided, create the directory and write the config to it
          mkdir -p "$(params.home)/.config/jumpstarter/clients"
          echo "$(params.config)" > "$(params.home)/.config/jumpstarter/clients/default.yaml"
          # replace __POD_TOKEN__ in the config with the running pod token
          sed -i "s/__POD_TOKEN__/$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)/g" "$(params.home)/.config/jumpstarter/clients/default.yaml"
          set +x
        fi

        # Use to the specified Jumpstarter client configuration
        jmp config client use "$(params.client-name)"
        echo "Using Jumpstarter client configuration: $(params.client-name)"

        # Set the Jumpstarter lease environment variable
        export JMP_LEASE="$(params.jmp-lease-id)"

        # Show the command that will be executed
        echo "Running: $(params.jmp-jScript)"

        cd /workspace/source

        # Execute the script commands within the Jumpstarter shell
        jmp shell --lease "${JMP_LEASE}" <<-EOF
          $(params.jmp-jScript)
        EOF

        echo "The jScript commands were successfully executed."
  workspaces:
    - description: Workspace for mounting Jumpstarter client files.
      mountPath: "$(params.home)/.config/jumpstarter/clients"
      name: jumpstarter-client-secret
      optional: true
    - description: Workspace containing the source code / build images
      name: source
